//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODataWebApp
{
    using System;
    using System.Collections.Generic;
    
    public partial class Sample
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Sample()
        {
            this.BatchProductionRecord = new HashSet<BatchProductionRecord>();
            this.SampleTest = new HashSet<SampleTest>();
        }
    
        public int ID { get; set; }
        public Nullable<int> BatchProductionRecordEntry { get; set; }
        public Nullable<int> SampleSourceID { get; set; }
        public string SampleSize { get; set; }
        public string SampleType { get; set; }
        public string SamplePullReason { get; set; }
        public string SampleExpiration { get; set; }
        public Nullable<int> EquipmentID { get; set; }
        public Nullable<int> PhysicalAssetID { get; set; }
        public string ProceduralElementReference { get; set; }
        public string SOPReference { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BatchProductionRecord> BatchProductionRecord { get; set; }
        public virtual BatchProductionRecordEntry BatchProductionRecordEntry1 { get; set; }
        public virtual Equipment Equipment { get; set; }
        public virtual PhysicalAsset PhysicalAsset { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SampleTest> SampleTest { get; set; }
    }
}
